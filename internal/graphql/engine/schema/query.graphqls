type Query {
    initializeAuth: String!
    finalizeAuth(code: String!, state: String!): AuthAttempt!
    # user: User! @isAuthed
    user(id: Uint64!): User!
    character(id: Uint64!): Character
}

directive @goModel(model: String) on OBJECT
directive @goField(forceResolver: Boolean, name: String) on INPUT_FIELD_DEFINITION | FIELD_DEFINITION
directive @isAuthed on OBJECT | FIELD_DEFINITION

scalar Time
scalar Uint
scalar Uint64
scalar UUID
