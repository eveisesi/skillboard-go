type Structure @goModel(model: "github.com/eveisesi/skillz.Structure") {
    id: Uint64!
    name: String!
    ownerID: Uint!
    solarSystemID: Uint!
    typeID: Uint

    system: SolarSystem!
}

type Station @goModel(model: "github.com/eveisesi/skillz.Station") {
    id: Uint!
    name: String!
    systemID: Uint!
    typeID: Uint!
    raceID: Uint
    ownerCorporationID: Uint
    maxDockableShipVolume: Float!
    officeRentalCost: Float!
    reprocessingEfficiency: Float!
    reprocessingStationsTake: Float!

    system: SolarSystem!
}

type SolarSystem @goModel(model: "github.com/eveisesi/skillz.SolarSystem") {
    id: Uint!
    name: String!
    constellationID: Uint!
    securityStatus: Float!
    starID: Uint
    securityClass: String

    constellation: Constellation!
}

type Constellation @goModel(model: "github.com/eveisesi/skillz.Constellation") {
    id: Uint!
    name: String!
    regionID: Uint!

    region: Region!
}

type Region @goModel(model: "github.com/eveisesi/skillz.Region") {
    id: Uint!
    name: String!
}

type Type @goModel(model: "github.com/eveisesi/skillz.Type") {
    id: Uint!
    name: String!
    groupID: Uint!
    published: Boolean!
    capacity: Float!
    marketGroupID: Uint
    mass: Float
    packagedVolume: Float
    portionSize: Uint
    radius: Float
    volume: Float!

    attributes: [DogmaAttribute]! @goField(forceResolver: true)

    group: Group!
}

type DogmaAttribute @goModel(model: "github.com/eveisesi/skillz.TypeDogmaAttribute") {
    attributeID: Uint!
    value: Float!
}

type Group @goModel(model: "github.com/eveisesi/skillz.Group") {
    id: Uint!
    name: String!
    published: Boolean!
    categoryID: Uint!

    category: Category!
}

type Category @goModel(model: "github.com/eveisesi/skillz.Category") {
    id: Uint!
    name: String!
    published: Boolean!
}
